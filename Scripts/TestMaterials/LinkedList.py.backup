class Node:\n    \"\"\"Represents a node in the linked list.\"\"\"\n    def __init__(self,data):\n        self.data=data\n        self.next=None\n    \nclass LinkedList:\n    \"\"\"Represents a singly linked list.\"\"\"\n    def __init__(self):\n        self.head=None\n        \n    def insert(self,data):\n        \"\"\"Inserts a new node with the given data at the end of the list.\"\"\"\n        new_node=Node(data)\n        if self.head is None:\n            self.head=new_node\n            return\n        current=self.head\n        while current.next:\n            current=current.next\n        current.next=new_node\n\n    def delete(self,key):\n        \"\"\"Deletes the first node with the given key from the list.\"\"\"\n        temp=self.head\n        if self.head is None:\n            print(f\"List is empty. Cannot delete {key}.\")\n            return\n        if temp and temp.data==key:\n            self.head=temp.next\n            return\n        prev=None\n        while temp and temp.data!=key:\n            prev=temp\n            temp=temp.next\n        if not temp:\n            print(f\"{key} not found in the linked list.\")\n            return\n        prev.next=temp.next\n\n    def update(self,old_value,new_value):\n        \"\"\"Updates the first node with the old value to the new value.\"\"\"\n        temp=self.head\n        if self.head is None:\n            print(f\"List is empty. Cannot update {old_value}.\")\n            return\n        while temp:\n            if temp.data==old_value:\n                temp.data=new_value\n                return\n            temp=temp.next\n        print(f\"{old_value} is not present in the list.\")\n        \n    def display(self):\n        \"\"\"Displays the linked list.\"\"\"\n        temp=self.head\n        while temp:\n            print(temp.data,end=\"->\")\n            temp=temp.next\n        print(\"None\")            \n\ndef main():\n    \"\"\"Main function to interact with the linked list.\"\"\"\n    ll = LinkedList()\n    while True:\n        print(\"\\nChoose an option:\")\n        print(\"1. Insert\")\n        print(\"2. Delete\")\n        print(\"3. Update\")\n        print(\"4. Display\")\n        print(\"5. Exit\")\n\n        choice = input(\"Enter your choice (1-5): \")\n\n        if choice == '1':\n            data = int(input(\"Enter value to insert: \"))\n            ll.insert(data)\n        elif choice == '2':\n            key = int(input(\"Enter value to delete: \"))\n            ll.delete(key)\n        elif choice == '3':\n            old = int(input(\"Enter value to update: \"))\n            new = int(input(\"Enter new value: \"))\n            ll.update(old, new)\n        elif choice == '4':\n            ll.display()\n        elif choice == '5':\n            print(\"Exiting...\")\n            break\n        else:\n            print(\"Invalid choice. Please enter 1 to 5.\")\n\nif __name__==\"__main__\":\n    main()