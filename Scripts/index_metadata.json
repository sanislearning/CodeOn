[
  {
    "type": "function_call",
    "code_chunk": "load_dotenv()",
    "summary": "Function call: load_dotenv()",
    "parent": null
  },
  {
    "type": "function_call",
    "code_chunk": "genai.configure(api_key=os.getenv(\"GOOGLE_API_KEY\"))",
    "summary": "Function call: genai.configure(api_key=os.getenv(\"GOOGLE_API_KEY\"))",
    "parent": null
  },
  {
    "type": "assignment",
    "code_chunk": "model = genai.GenerativeModel(\"gemini-2.0-flash\")",
    "summary": "Variable assignment: model = genai.GenerativeModel(\"gemini-2.0-flash\")",
    "parent": null
  },
  {
    "type": "assignment",
    "code_chunk": "embedding = HuggingFaceEmbeddings(\n    model_name=\"sentence-transformers/all-MiniLM-L6-v2\",\n    model_kwargs={\"device\": \"cpu\"}\n)",
    "summary": "Variable assignment: embedding = HuggingFaceEmbeddings(\n    model_name=\"sentence-transformers/all-MiniLM-L6-v2\",\n    model_kwargs={\"device\": \"cpu\"}\n)",
    "parent": null
  },
  {
    "type": "assignment",
    "code_chunk": "VECTOR_DB_DIR = \".codeon/code_index_faiss\"",
    "summary": "Variable assignment: VECTOR_DB_DIR = \".codeon/code_index_faiss\"",
    "parent": null
  },
  {
    "type": "assignment",
    "code_chunk": "retriever = FAISS.load_local(VECTOR_DB_DIR, embedding).as_retriever(search_kwargs={\"k\": 5})",
    "summary": "Variable assignment: retriever = FAISS.load_local(VECTOR_DB_DIR, embedding).as_retriever(search_kwargs={\"k\": 5})",
    "parent": null
  },
  {
    "type": "function",
    "name": "answer_query_with_gemini",
    "code_chunk": "def answer_query_with_gemini(query: str):\n    docs = retriever.invoke(query)\n    if not docs:\n        return \"CodeOn: No relevant code found for your question.\"\n\n    context = \"\\n\\n\".join([f\"[{i+1}] {doc.page_content}\" for i, doc in enumerate(docs)])\n\n    prompt = f\"\"\"\nYou are CodeOn, a CLI-based code improvement and debugging assistant.\nUse the retrieved code chunks below to answer the user's question clearly and helpfully.\n\nCode Chunks:\n{context}\n\nUser Question:\n{query}\n\nAnswer:\"\"\"\n\n    response = model.generate_content(prompt)\n    return response.text",
    "start_line": 25,
    "end_line": 45,
    "parent": null,
    "summary": "Function with no docstring"
  },
  {
    "type": "assignment",
    "code_chunk": "docs = retriever.invoke(query)",
    "summary": "Variable assignment: docs = retriever.invoke(query)",
    "parent": "answer_query_with_gemini"
  },
  {
    "type": "assignment",
    "code_chunk": "context = \"\\n\\n\".join([f\"[{i+1}] {doc.page_content}\" for i, doc in enumerate(docs)])",
    "summary": "Variable assignment: context = \"\\n\\n\".join([f\"[{i+1}] {doc.page_content}\" for i, doc in enumerate(docs)])",
    "parent": "answer_query_with_gemini"
  },
  {
    "type": "assignment",
    "code_chunk": "prompt = f\"\"\"\nYou are CodeOn, a CLI-based code improvement and debugging assistant.\nUse the retrieved code chunks below to answer the user's question clearly and helpfully.\n\nCode Chunks:\n{context}\n\nUser Question:\n{query}\n\nAnswer:\"\"\"",
    "summary": "Variable assignment: prompt = f\"\"\"\nYou are CodeOn, a CLI-based code improvement and debugging assistant.\nUse the retrieved code chunks below to answer the user's question clearly and helpfully.\n\nCode Chunks:\n{context}\n\nUser Question:\n{query}\n\nAnswer:\"\"\"",
    "parent": "answer_query_with_gemini"
  },
  {
    "type": "assignment",
    "code_chunk": "response = model.generate_content(prompt)",
    "summary": "Variable assignment: response = model.generate_content(prompt)",
    "parent": "answer_query_with_gemini"
  },
  {
    "type": "function_call",
    "code_chunk": "print(\"Usage: python ask.py \\\"<your question about the code>\\\"\")",
    "summary": "Function call: print(\"Usage: python ask.py \\\"<your question about the code>\\\"\")",
    "parent": null
  },
  {
    "type": "function_call",
    "code_chunk": "sys.exit(1)",
    "summary": "Function call: sys.exit(1)",
    "parent": null
  },
  {
    "type": "assignment",
    "code_chunk": "query = sys.argv[1]",
    "summary": "Variable assignment: query = sys.argv[1]",
    "parent": null
  },
  {
    "type": "function_call",
    "code_chunk": "print(\"\\n\ud83d\udccc CodeOn's Answer:\\n\")",
    "summary": "Function call: print(\"\\n\ud83d\udccc CodeOn's Answer:\\n\")",
    "parent": null
  },
  {
    "type": "function_call",
    "code_chunk": "print(answer_query_with_gemini(query))",
    "summary": "Function call: print(answer_query_with_gemini(query))",
    "parent": null
  }
]